-------------Algoritmo movimiento del jugador---------------

MovimientoJugador(){
	while (leftArrow==true && PosJugador()-5!=0){
		DesplazarCentroJugador( -1 * VelocidadJugador() , 0);
		//(preguntar como ser mas específico)
	}

	while (rightArrow==true && PosJugador()+5!=MaxAncho){
		DesplazarCentroJugador(0 , 1 * VelocidadJugador());
		//(preguntar como ser mas especifico)

	}
	
}

----------Algoritmos movimiento del enemigo-----------

MovimientoEnemigoKamikazeDirigido(boolean esMixto){
	boolean aux=true;
	while (PosYEnemigo()>0 && NoHayaImpactado() && EsteVivo() && aux){  (preguntar sobre el impacto)
		if ( PosXEnemigo()>PosJugador() ){
			DesplazarCentroEnemigo( -1 * VelocidadEnemigo() , 0);
		}
		if (PosYEnemigo()<PosJugador() ) {
			DesplazarCentroEnemigo( 1 * VelocidadEnemigo() , 0);
		}
		DesplazarCentroEnemigo( 0 , -2 * VelocidadEnemigo() );
		
		if(es Mixto && Vida()<50%)
			aux=false;
	}
	
	if ( EsteVivo() )
		ReAparecer();

}


MovimientoEnemigoKamikazeAleatorio(){
	
	while (PosYEnemigo()>0 && NoHayaImpactado() && EsteVivo() ){
		int ran = random; (un valor random)
		int aux = ran mod 10;

		if ( ran mod 2 == 0 )
			DesplazarCentroEnemigo( -aux * VelocidadEnemigo() , 2);
		else
			DesplazarCentroEnemigo( aux * VelocidadEnemigo() , 2);
	}
	
	if ( EsteVivo() )
		ReAparecer();
}

MovimientoEnemigoMixto(){
	boolean aux = true;

	MovimientoEnemigoKamikazeDirigido(aux);
	MovimientoEnemigoKamikazeAleatorio();
	

}



